
<html>
<head>
    <title>PHP-1</title>
</head>
<body>
<h1>PHP</h1>
<p>урок 1. Домашнее задание</p>
<hr />
<p1>пример 3.1</p1>
<?php var_dump(3/1);?>
<br>
<p2>пример 3.2</p2>
<?php var_dump(1/3);?>
<br>
<p3>пример 3.3</p3>
<?php var_dump('20 cats'+40);?>
<br>
<p4>пример 3.4</p4>
<?php var_dump(18%4);?>
<hr />
<p5>пример 4.1</p5>
<?php echo ($a=2);//выражением является 2
?>
<br>
<p6>пример 4.2</p6>
<?php $x=($y=12)-8; //выражением для $у является 12, выражением для $x является $y-8
echo $x;?>
<hr />
<p7>пример 5.1</p7>
<?php var_dump(1==1.0); //сравнение двух чисел - значение true
?>
<br>
<p8>пример 5.2</p8>
<?php var_dump(1===1.0);//тождественное сравнение чисел (побайтовое) - значение false
?>
<br>
<p9>пример 5.3</p9>
<?php var_dump('02'==2); /*сравниваем преобразованное значение типа строки в
 тип число с числом - значение true*/
?>
<br>
<p10>пример 5.4</p10>
<?php var_dump('02'===2); /*тождественное сравнение(побайтовое) преобразованного значение
 типа строки в тип число с числом- значение false*/
?>
<br>
<p11>пример 5.5</p11>
<?php var_dump('02'=='2');/*сравниваем два преобразованных значения (из типа строки в тип число)
- значение true*/
?>

<hr />
<p12>пример 6</p12>
<?php $x=true xor true; var_dump($x);/*в данном случае получается функция var_dump будет выводить первое значение переменной, т.е. значение до пробела.
Оператор = имеет приоритет выше чем оператор xor*/
?>
</body>
</html>