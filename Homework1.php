<html>
    <head>
        <title>PHP-1</title>
    </head>
    <body>
    <h1> PHP </h1>
        <p>урок 1. Домашнее задание</p>
    <hr>
    <p>пример 3.1</p>
        <?php var_dump(3/1); ?>

    <br>
    <p>пример 3.2</p>
        <?php var_dump(1/3); ?>

    <br>
    <p>пример 3.3</p>
        <?php var_dump('20 cats'+40); ?>

    <br>
    <p>пример 3.4</p>
        <?php var_dump(18%4); ?>

    <hr>
    <p>пример 4.1</p>
        <?php echo ($a=2);//выражением присваивания является $a=2, значением которого является 2?>

    <br>
    <p>пример 4.2</p>
        <?php
        $x=($y=12)-8; //выражением присваивания является $x=($y=12)-8, значением которого является вычисление 12-8
        echo $x;
        ?>

    <hr>
    <p>пример 5.1</p>
        <?php var_dump(1==1.0); //сравнение двух чисел - значение true?>

    <br>
    <p>пример 5.2</p>
        <?php var_dump(1===1.0);//тождественное сравнение типа int и типа float- значение false?>

    <br>
    <p>пример 5.3</p>
        <?php var_dump('02'==2); /*сравниваем преобразованное значение типа строки в
        тип число с числом - значение true*/?>

    <br>
    <p>пример 5.4</p>
        <?php var_dump('02'===2); /*тождественное сравнение(побайтовое)
        типа string и тип int- значение false*/?>

    <br>
    <p>пример 5.5</p>
        <?php var_dump('02'=='2');/*сравниваем два преобразованных значения (из типа string в тип int)
        - значение true*/?>

    <hr>
    <p>пример 6</p>
        <?php $x=true xor true; var_dump($x);/*в данном случае получается функция var_dump будет выводить true.
        Потому что оператор = имеет приоритет выше чем оператор xor*/?>

    </body>
</html>